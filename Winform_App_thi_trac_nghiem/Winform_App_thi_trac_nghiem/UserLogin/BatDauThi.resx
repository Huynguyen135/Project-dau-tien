<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/4QAuRXhpZgAATU0AKgAAAAgAAkAAAAMAAAABAAAAAEABAAEAAAAB
        AAAAAAAAAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIoLTkwKCo2KyIjMkQy
        Njs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09PT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCADIAMgDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEA
        AAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKB
        kaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlq
        c3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ
        2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREA
        AgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcY
        GRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaX
        mJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oA
        DAMBAAIRAxEAPwDt6KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooA
        KKKKACiiigAooooAKKKv2ulSz4Z/3aHuRyfwoAoU5I2fhVZj7DNdDDpltDjEYdvV+atgBRgAAegoA5f7
        LcYz5EuPXYajeN4/voy/UYrrKKAORorpZtPt5s7olB9V4NZd1o8sWWgPmKP4eh/+vQBnUUpBBIIwRwQa
        SgAooooAKKKKACiiigAooooAKKKKACiiigAooooAKUAkgAEknAA70lbOk2IVRcSD5j9wHsPWgB9hpawg
        STANJ1APRf8A69aVFFABRRRQAUUUUAFFFFAFK+01LoFlwso6N6/WsCSNonKOCGB5BrrKz9UsRcReag/e
        oM8dxQBg0UUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUATWcBubpI/4Sct9K6cAKAAMAdBWVocXEspHf
        aD+p/pWtQAUUUUAFFFFABRRRQAUUUUAFFFFAHO6nbeRdHaMI/wAw9vWqdbusxb7QSY5Rv0P+RWFQAUUU
        UAFFFFABRRRQAUUUUAFFFFABRRRQB0OkJt09T/eJP9P6VdqnpJzp8fsSP1q5QAUUUUAFFFFABRRRQAUU
        UUAFFFFAFe/TfYzD/ZJ/LmuZrp704spv+uZ/lXMUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAbmiyZtn
        TurZ/P8A/Ua0q5/SpxDeBSflkG0/Xt/h+NdBQAUUUUAFFFFABRRRQAUUUUAFFFFAFLVZNlg47sQo/wA/
        ga56tTW5w0yQg8Jyfqen+fesugAooooAKKKKACiiigAooooAKKKKACiiigA5GCOo6V0lhdi7tgSfnXhh
        XN1Na3L2swkT6FfUUAdRRUVvcx3MYeM5HcdxUtABRRRQAUUUUAFFFFABUN1cLawNI3bgD1NSSypDGXkY
        Ko6k1zt9etdzZ5CD7o/z3oArySGWRnY5YnJNNoooAKKKKACiiigAooooAKKKKACiiigAooooAKKKmtrW
        W6fbGvTqx6CgAt7mW2k3xtg9x61v2d2bqPcY2Q+44P0NRWulwwYZwJJPUjgfhV6gAooooAKKKKACoriY
        wxFxG0hH8KjmpaKAOZuruW6fMhwAeFHb/wCvVeumubGG6B8xPm7MOCKxbvTZbXLffj9QOn1oAp0UUUAF
        FFFABRRRQAUUUUAFFFFABRRRQAUUVasbRrucLyEXlm9P/rmgB1hp7Xb7jlYgeT3P0roIokhQJGoVR2FE
        caxIEQAKvQCnUAFFFFABRRRQAUUUUAFFFFABQQCCDyDRRQBj6hpezM1sOP4kH9Kya66sTVbARHz4h8rH
        5gOxoAzKKKKACiiigAooooAKKKKACiiigBURnIVRlmOAB3rprO2FrbLGOvVj6msnRrfzJzKw4j6fU1u0
        AFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFIyLIhVhlSMEUtFAHL3dsbW5aM9P4T6ioa3dYt/MthKB80Z
        5+nesKgAooooAKKKKACiiigAoopQCSAOpOBQB0Olw+VYJ6v8x/H/AOtirlIqBUVR0UYFLQAUUUUAFFFF
        ABRRRQAUUUUAFFFFABRRRQAUUUUANkQSRsjfdYYNcrIhjkZD1UkGusrnNUj8vUJPRiG/xoAqUUUUAFFF
        FABRRRQAVNbDN1CPVwP1oooA6iiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKwdbGL1fdAf5
        0UUAZ9FFFABRRRQB/9k=
</value>
  </data>
</root>